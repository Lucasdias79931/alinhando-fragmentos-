 Para treinar crie um script python que leia um dos genomas que 
vcs baixaram desde um arquivo fasta, e corte ele em X fragmentos aleatórios, tanto em tamanho 
de 100 a 1000 bases e em posições aleatórias dentro do genoma. Despois que faça a alinhamento 
de cada um dos X fragmentos contra o gene envelope. Podem acontecer várias coisas com o 
fragmento: 1 - nada dele alinha, 2 - alinha totalmente ou 3 - alinha parcialmente, 
3.A com o inicio do gene, 3.B com o final de gene. Nos casos de alinhamento, 
precisamos saber a primeira e ultima posição do gene envelope que está contida no 
fragmento alinhado. Dúvidas?
...X = 300
...Se denotamos por I e F a posição inicial e final do alinhamento no gene env de referencia, denotando por N o tamanho do gene envelope, então no segundo caso (alinhamento total) teríamos I>=1, e F<=N. No caso 3.A, alinhamento parcial no inicio do gene, teremos I=1 e F<N. No caso 3.B, alinhamento parcial no final do gene teríamos I>1 e F=N. Correto?
...As posições I e F vão definir qual parte do nosso modelo deverá ser usado para classificar cada sequencia parcial de entrada. Construiremos submodelos com apenas as posições classificatórias que fiquem dentro do intervalo [I,F]. Guarde este texto para esclarecimento futuro olhando pro código.
...Far-se-á parte da pesquisa determinar, por exemplo, o menor comprimento que pode ser classificado com, digamos, 90% de acurácia.
e como esse comprimento mínimo varia de um virus pro outro



//
    1   Abri o arquivo
    2   Extrair todas as sequencias
        2.1 Usei uma abordagem de criar uma Lista de Dicionário, onde cada dicionário é uma sequencia
    3   A partir da Lista, extrair fragmentos de sequencias
        3.1 Tanto a sequencia quanto o tamanho são aleatórios, sendo que o tamanho 
                da sequencia está no intervalo [100, 1000]
    4   Escrever os fragmentos no fragmentos.fasta
    5   Alinhar as subsequencias
